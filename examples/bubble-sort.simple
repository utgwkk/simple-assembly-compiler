init:
  XOR 7 7 ; initialize $7 to 0
  LD 0 0(7) ; load offset - 1 of data
  AND 6 6 ; NOP
  LD 1 1(7) ; load length of data
  LI 6 0 ; $zero
  LI 7 1 ; $one

init_outer:
  LI 2 0 ; $i = 0

cond_outer:
  ADD 2 7
  CMP 2 1 ; $i + 1 == $length ??
  BE end_outer
  SUB 2 7

init_inner:
  MOV 3 6 ; $j = 0

cond_inner:
  CMP 1 3 ; $length - $j <= 0 ??
  BLE end_inner

body_inner:
  ADD 3 0 ; $j += $offset - 1
  SUB 3 7 ; $j--
  LD 4 2(3) ; $a[j]
  LD 5 1(3) ; $a[j - 1]
  CMP 4 5 ; if ($a[j] - a[j - 1] <= 0)
  BLE end_if

if_upper_is_small:
  OUT 7 ; output 1
  ST 4 1(3) ; $a[j - 1] = $a[j]
  ST 5 2(3) ; $a[j] = $a[j - 1]

end_if:
  OUT 6 ; output 0
  ADD 3 7 ; $j++
  SUB 3 0 ; $j -= $offset - 1
  ADD 3 7 ; $j += 1
  B 0 cond_inner

end_inner:
  ADD 2 7 ; $i += 1
  B 0 cond_outer

end_outer:
  HLT
