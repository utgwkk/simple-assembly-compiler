init:
  XOR 7 7 ; initialize $7 to 0
  LD 0 0(7) ; load offset of data
  AND 6 6 ; NOP
  LD 1 1(7) ; load length of data
  AND 6 6 ; NOP
  LI 6 0 ; $zero
  LI 7 1 ; $one

init_outer:
  LI 2 0 ; $i = 0

cond_outer:
  ADD 2 7
  CMP 2 1 ; $i + 1 == $length ??
  BE end_outer
  SUB 2 7

init_inner:
  MOV 3 1 ; $j = $length
  SUB 3 7 ; $j -= 1

cond_inner:
  CMP 3 2 ; $j <= $i ??
  BLE end_inner

body_inner:
  ADD 3 0 ; $j += $offset
  LD 4 0(3) ; $a[j]
  AND 6 6 ; NOP
  LD 5 -1(3) ; $a[j - 1]
  AND 6 6 ; NOP
  SUB 3 0 ; $j -= $offset
  CMP 5 4 ; if ($a[j - 1] - a[j] < 0)
  BLT if_upper_is_small
  OUT 6 ; output 0
  B 0 end_if

if_upper_is_small:
  OUT 7 ; output 1
  ADD 3 0 ; $j += $offset
  ST 4 -1(3) ; $a[j - 1] = $a[j]
  AND 6 6 ; NOP
  ST 5 0(3) ; $a[j] = $a[j - 1]
  AND 6 6 ; NOP
  SUB 3 0 ; $j -= $offset

end_if:
  SUB 3 7 ; $j -= 1
  B 0 cond_inner

end_inner:
  ADD 2 7 ; $i += 1
  B 0 cond_outer

end_outer:
  HLT
